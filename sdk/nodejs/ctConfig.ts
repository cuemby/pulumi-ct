// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function ctConfig(args: CtConfigArgs, opts?: pulumi.InvokeOptions): Promise<CtConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("ct:index/ctConfig:ctConfig", {
        "content": args.content,
        "platform": args.platform,
        "prettyPrint": args.prettyPrint,
        "snippets": args.snippets,
        "strict": args.strict,
    }, opts);
}

/**
 * A collection of arguments for invoking ctConfig.
 */
export interface CtConfigArgs {
    content: string;
    platform?: string;
    prettyPrint?: boolean;
    snippets?: string[];
    strict?: boolean;
}

/**
 * A collection of values returned by ctConfig.
 */
export interface CtConfigResult {
    readonly content: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly platform?: string;
    readonly prettyPrint?: boolean;
    readonly rendered: string;
    readonly snippets?: string[];
    readonly strict?: boolean;
}

export function ctConfigOutput(args: CtConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<CtConfigResult> {
    return pulumi.output(args).apply(a => ctConfig(a, opts))
}

/**
 * A collection of arguments for invoking ctConfig.
 */
export interface CtConfigOutputArgs {
    content: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    prettyPrint?: pulumi.Input<boolean>;
    snippets?: pulumi.Input<pulumi.Input<string>[]>;
    strict?: pulumi.Input<boolean>;
}
